import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Load data from the Excel file
stock_data = pd.read_excel('d1.xlsx')

# Convert Date column to datetime if it's not already in datetime format
stock_data['Date'] = pd.to_datetime(stock_data['Date'])

# Sort data based on Date
stock_data = stock_data.sort_values('Date')

# Feature engineering - creating a new column for the days
stock_data['Days'] = (stock_data['Date'] - stock_data['Date'].min()).dt.days

# Splitting the data
X = stock_data[['Days']]
y = stock_data['Close']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)

# Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Calculate Mean Squared Error
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Visualizing the results
plt.figure(figsize=(10, 6))
plt.scatter(X['Days'], y, color='gray')
plt.plot(X_test, y_pred, color='red')
plt.xlabel('Days')
plt.ylabel('Stock Price')
plt.title('Stock Price Prediction using Linear Regression')
plt.show()
